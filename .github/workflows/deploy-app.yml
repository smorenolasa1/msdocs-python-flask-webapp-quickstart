name: deploy-app

on:
  push:
    paths:
      - '.github/app/**'
  workflow_dispatch:

env:
  REGISTRY_LOGIN_SERVER: 'smoreno.azurecr.io'
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: 'acr-username'
  KEY_VALUE_SECRET_NAME_ACR_PASSWORD: 'acr-password1'
  KEY_VAULT_NAME: 'smoreno-kv'
  IMAGE_BASE_NAME: 'smorenoapp-ex3'
  AZURE_WEBAPP_NAME: 'smoreno-ex3'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Get docker registry credentials from Azure Key Vault'
      uses: azure/cli@v1
      with:
        inlineScript: |
          echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{env.KEY_VAULT_SECRET_NAME_ACR_USERNAME}} --vault-name ${{env.KEY_VAULT_NAME}} --query value -o tsv)" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{env.KEY_VALUE_SECRET_NAME_ACR_PASSWORD}} --vault-name ${{env.KEY_VAULT_NAME}} --query value -o tsv)" >> $GITHUB_ENV

    - name: 'Login Docker Registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{env.REGISTRY_LOGIN_SERVER}}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: Set image version
      id: image-version
      run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')"

    - name: 'Build and push image'
      working-directory: ./app
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest

    outputs:
      image-version: ${{ steps.image-version.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: '${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest'
